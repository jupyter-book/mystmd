import { describe, expect, test } from 'vitest';
import { VFile } from 'vfile';

import { imageNoAltTextTransform } from './images.js';

describe('Test imageNoAltTextTransform', () => {
  test('image without alt text generates warning', () => {
    const mdast = {
      type: 'root',
      children: [
        {
          type: 'image',
          url: 'https://images.com/cats',
          align: 'center',
        },
      ],
    };
    const file = new VFile();
    imageNoAltTextTransform(mdast, file);
    expect(mdast).toEqual({
      type: 'root',
      children: [
        {
          type: 'image',
          url: 'https://images.com/cats',
          align: 'center',
        },
      ],
    });
    // A warning was created
    expect(file.messages.length).toBe(1);
    expect(file.messages[0].message.includes('missing alt text')).toBe(true);
  });
  test('image without alt text does not generate a warning', () => {
    const mdast = {
      type: 'root',
      children: [
        {
          type: 'image',
          url: 'https://images.com/cats',
          alt: 'I have alt text',
          align: 'center',
        },
      ],
    };
    const file = new VFile();
    imageNoAltTextTransform(mdast, file);
    expect(mdast).toEqual({
      type: 'root',
      children: [
        {
          type: 'image',
          url: 'https://images.com/cats',
          alt: 'I have alt text',
          align: 'center',
        },
      ],
    });
    // A warning was created
    expect(file.messages.length).toBe(0);
  });
  test('image inside captioned figure warns about generated alt text', () => {
    const mdast = {
      type: 'container',
      kind: 'figure',
      children: [
        {
          type: 'image',
          url: 'https://images.com/cats',
          alt: 'I don’t have alt text, but I do have a caption',
          data: {
            altTextIsAutoGenerated: true,
          },
        },
        {
          type: 'caption',
          children: [
            {
              type: 'paragraph',
              children: [
                {
                  type: 'text',
                  value: 'I don’t have alt text, but I do have a caption',
                },
              ],
            },
          ],
        },
      ],
      enumerator: '1',
    };
    const file = new VFile();
    imageNoAltTextTransform(mdast, file);
    expect(mdast).toEqual({
      type: 'container',
      kind: 'figure',
      children: [
        {
          type: 'image',
          url: 'https://images.com/cats',
          alt: 'I don’t have alt text, but I do have a caption',
          data: {
            altTextIsAutoGenerated: true,
          },
        },
        {
          type: 'caption',
          children: [
            {
              type: 'paragraph',
              children: [
                {
                  type: 'text',
                  value: 'I don’t have alt text, but I do have a caption',
                },
              ],
            },
          ],
        },
      ],
      enumerator: '1',
    });
    // A warning was created
    expect(file.messages.length).toBe(1);
    expect(file.messages[0].message.includes('was auto-generated')).toBe(true);
  });
  test('image inside output does not generate warning', () => {
    const mdast = {
      type: 'root',
      children: [
        {
          type: 'output',
          children: [
            {
              type: 'image',
              url: 'https://images.com/cats',
              align: 'center',
            },
          ],
        },
      ],
    };
    const file = new VFile();
    imageNoAltTextTransform(mdast, file);
    expect(mdast).toEqual({
      type: 'root',
      children: [
        {
          type: 'output',
          children: [
            {
              type: 'image',
              url: 'https://images.com/cats',
              align: 'center',
            },
          ],
        },
      ],
    });
    // A warning was created
    expect(file.messages.length).toBe(0);
  });
});
